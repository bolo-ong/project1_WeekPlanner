{"ast":null,"code":"import _regeneratorRuntime from\"/Users/imchaemin/Desktop/react-project/project1/server/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/imchaemin/Desktop/react-project/project1/server/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/imchaemin/Desktop/react-project/project1/server/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/imchaemin/Desktop/react-project/project1/server/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{v4 as uuidv4}from'uuid';import Header from'../components/Header';import Card from'../components/Card';import{useEffect,useState,useContext}from'react';import AddForm from'../components/AddForm';import EditForm from'../components/EditForm';import AuthOverlay from'../components/AuthOverlay';import SignInContext from'../contexts/SignInCheckContext/SignInCheckContext';import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Service(){var _useContext=useContext(SignInContext),isSignIn=_useContext.isSignIn,setIsSignIn=_useContext.setIsSignIn;var date=new Date();var day=date.getDay();var hour=date.getHours();var min=date.getMinutes();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),addForm=_useState2[0],setAddForm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),editForm=_useState4[0],setEditForm=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),routines=_useState6[0],setRoutines=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),todayRoutines=_useState8[0],setTodayRoutines=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),selectedCardId=_useState10[0],setSelectedCardId=_useState10[1];//요일 체크박스에 체크된 요일의 데이터만 가져와서 보여주기 위한 변수와 핸들러\nvar _useState11=useState({\"월\":false,\"화\":false,\"수\":false,\"목\":false,\"금\":false,\"토\":false,\"일\":false}),_useState12=_slicedToArray(_useState11,2),weekCheck=_useState12[0],setWeekCheck=_useState12[1];var week=Object.entries(weekCheck);var today=week[(day-1+7)%7][0];var handleWeekCheck=function handleWeekCheck(e){var copy=_objectSpread({},weekCheck);copy[e.target.id]=e.target.checked;setWeekCheck(copy);};//렌더링 시 요일 체크박스에 '오늘'의 요일을 체크\nuseEffect(function(){var copy=_objectSpread({},weekCheck);copy[today]=true;setWeekCheck(copy);},[]);//서버에서 루틴 데이터를 받아와 시간순으로 정렬하고 스테이트에 저장, 로그인 시 해당 유저의 루틴만 가져옴\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(process.env.REACT_APP_SERVER_URL,\"/api/routine\"),{headers:{'Content-Type':'application/json'},credentials:'include'});case 3:res=_context.sent;_context.next=6;return res.json();case 6:data=_context.sent;data.sort(function(a,b){return new Date(\"1970/01/01 \".concat(a.time))-new Date(\"1970/01/01 \".concat(b.time));});setRoutines(data);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error(_context.t0.message);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[isSignIn]);//루틴 데이터중에 체크박스에 체크된 요일의 데이터만 가져옴\nuseEffect(function(){var filteredRoutines=routines.filter(function(routine){return routine.weekCheck&&Object.keys(routine.weekCheck).some(function(day){return weekCheck[day]&&routine.weekCheck[day];});});setTodayRoutines(filteredRoutines);},[routines,weekCheck]);//페이지 왼쪽에 시간이 지날수록 차오르는 bar와, 루틴을 실행할 시간을 bar에 표시해줌\nfunction progressBar(hour,min){hour=isNaN(hour)?0:hour;min=isNaN(min)?0:min;return(hour*60+min)/60/24*100;}function progressLine(time){var _time$split$map=time.split(':').map(function(data){return parseInt(data);}),_time$split$map2=_slicedToArray(_time$split$map,2),hour=_time$split$map2[0],min=_time$split$map2[1];return progressBar(hour,min);}return/*#__PURE__*/_jsxs(_Fragment,{children:[isSignIn===false&&/*#__PURE__*/_jsx(AuthOverlay,{}),addForm===true&&/*#__PURE__*/_jsx(AddForm,{setAddForm:setAddForm,setRoutines:setRoutines,routines:routines}),editForm===true&&/*#__PURE__*/_jsx(EditForm,{setEditForm:setEditForm,setRoutines:setRoutines,routines:routines,todayRoutines:todayRoutines,selectedCardId:selectedCardId}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-[90vh] container mx-auto flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative flex flex-col-reverse mx-8 mt-10 mb-3 w-2.5 bg-gray-300 rounded-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2.5 bg-indigo-300 rounded-full\",style:{height:\"\".concat(progressBar(hour,min),\"%\")}}),todayRoutines.map(function(data){return/*#__PURE__*/_jsx(\"div\",{className:\"absolute bg-indigo-500 w-2.5 h-1.5 rounded-full\",style:{bottom:\"\".concat(progressLine(data.time),\"%\")}},uuidv4());})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex mt-7 ml-9\",children:week.map(function(data){return/*#__PURE__*/_jsxs(\"div\",{className:\"p-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:data[0],checked:data[1],onChange:handleWeekCheck}),/*#__PURE__*/_jsx(\"label\",{htmlFor:data[0],children:data[0]})]},uuidv4());})}),/*#__PURE__*/_jsx(Card,{addForm:addForm,setAddForm:setAddForm,routines:routines,todayRoutines:todayRoutines,editForm:editForm,setEditForm:setEditForm,setSelectedCardId:setSelectedCardId})]})]})]});}export default Service;","map":{"version":3,"names":["v4","uuidv4","Header","Card","useEffect","useState","useContext","AddForm","EditForm","AuthOverlay","SignInContext","Service","isSignIn","setIsSignIn","date","Date","day","getDay","hour","getHours","min","getMinutes","addForm","setAddForm","editForm","setEditForm","routines","setRoutines","todayRoutines","setTodayRoutines","selectedCardId","setSelectedCardId","weekCheck","setWeekCheck","week","Object","entries","today","handleWeekCheck","e","copy","target","id","checked","fetchData","fetch","process","env","REACT_APP_SERVER_URL","headers","credentials","res","json","data","sort","a","b","time","console","error","message","filteredRoutines","filter","routine","keys","some","progressBar","isNaN","progressLine","split","map","parseInt","height","bottom"],"sources":["/Users/imchaemin/Desktop/react-project/project1/server/client/src/pages/Service.js"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport { useEffect, useState, useContext } from 'react';\nimport AddForm from '../components/AddForm';\nimport EditForm from '../components/EditForm';\nimport AuthOverlay from '../components/AuthOverlay';\nimport SignInContext from '../contexts/SignInCheckContext/SignInCheckContext';\n\nfunction Service() {\n    const { isSignIn, setIsSignIn } = useContext(SignInContext);\n    const date = new Date();\n    const day = date.getDay();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n\n    const [addForm, setAddForm] = useState(false);\n    const [editForm, setEditForm] = useState(false);\n    const [routines, setRoutines] = useState([]);\n    const [todayRoutines, setTodayRoutines] = useState([]);\n    const [selectedCardId, setSelectedCardId] = useState();\n\n\n    //요일 체크박스에 체크된 요일의 데이터만 가져와서 보여주기 위한 변수와 핸들러\n    const [weekCheck, setWeekCheck] = useState({\n        \"월\": false,\n        \"화\": false,\n        \"수\": false,\n        \"목\": false,\n        \"금\": false,\n        \"토\": false,\n        \"일\": false\n    });\n    const week = Object.entries(weekCheck);\n    const today = week[(day - 1 + 7) % 7][0];\n    const handleWeekCheck = (e) => {\n        const copy = { ...weekCheck };\n        copy[e.target.id] = e.target.checked;\n        setWeekCheck(copy);\n    };\n\n\n    //렌더링 시 요일 체크박스에 '오늘'의 요일을 체크\n    useEffect(() => {\n        const copy = { ...weekCheck };\n        copy[today] = true;\n        setWeekCheck(copy);\n    }, []);\n\n\n    //서버에서 루틴 데이터를 받아와 시간순으로 정렬하고 스테이트에 저장, 로그인 시 해당 유저의 루틴만 가져옴\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const res = await fetch(`${process.env.REACT_APP_SERVER_URL}/api/routine`, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    credentials: 'include'\n                });\n                const data = await res.json();\n                data.sort((a, b) => new Date(`1970/01/01 ${a.time}`) - new Date(`1970/01/01 ${b.time}`));\n                setRoutines(data);\n\n            } catch (error) {\n                console.error(error.message);\n            }\n        };\n        fetchData();\n    }, [isSignIn]);\n\n    //루틴 데이터중에 체크박스에 체크된 요일의 데이터만 가져옴\n    useEffect(() => {\n        const filteredRoutines = routines.filter(routine =>\n            routine.weekCheck && Object.keys(routine.weekCheck).some(day => weekCheck[day] && routine.weekCheck[day])\n        );\n        setTodayRoutines(filteredRoutines);\n    }, [routines, weekCheck]);\n\n\n    //페이지 왼쪽에 시간이 지날수록 차오르는 bar와, 루틴을 실행할 시간을 bar에 표시해줌\n    function progressBar(hour, min) {\n        hour = isNaN(hour) ? 0 : hour;\n        min = isNaN(min) ? 0 : min;\n        return (hour * 60 + min) / 60 / 24 * 100;\n    }\n    function progressLine(time) {\n        const [hour, min] = time.split(':').map(data => parseInt(data));\n        return progressBar(hour, min);\n    }\n\n    return (\n        <>\n            {isSignIn === false && <AuthOverlay />}\n            {addForm === true && <AddForm setAddForm={setAddForm} setRoutines={setRoutines} routines={routines} />}\n            {editForm === true && <EditForm setEditForm={setEditForm} setRoutines={setRoutines} routines={routines} todayRoutines={todayRoutines} selectedCardId={selectedCardId} />}\n            <Header />\n            <div className='min-h-[90vh] container mx-auto flex'>\n                <div className='relative flex flex-col-reverse mx-8 mt-10 mb-3 w-2.5 bg-gray-300 rounded-full'>\n                    <div className='w-2.5 bg-indigo-300 rounded-full' style={{ height: `${progressBar(hour, min)}%` }}></div>\n                    {todayRoutines.map((data) => (\n                        <div className='absolute bg-indigo-500 w-2.5 h-1.5 rounded-full' key={uuidv4()} style={{ bottom: `${progressLine(data.time)}%` }}></div>\n                    ))}\n                </div>\n                <div>\n                    <div className='flex mt-7 ml-9'>\n                        {week.map((data) => (\n                            <div className='p-2' key={uuidv4()}>\n                                <input\n                                    type='checkbox'\n                                    id={data[0]}\n                                    checked={data[1]}\n                                    onChange={handleWeekCheck}\n                                />\n                                <label htmlFor={data[0]}>{data[0]}</label>\n                            </div>\n                        ))}\n                    </div>\n                    <Card\n                        addForm={addForm}\n                        setAddForm={setAddForm}\n                        routines={routines}\n                        todayRoutines={todayRoutines}\n                        editForm={editForm}\n                        setEditForm={setEditForm}\n                        setSelectedCardId={setSelectedCardId}\n                    />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Service;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}