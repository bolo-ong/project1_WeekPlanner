{"ast":null,"code":"var _jsxFileName = \"/Users/imchaemin/Desktop/react-project/project1/client/src/contexts/SignInCheckContext/SignInCheckProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SignInContext from './SignInCheckContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isSignIn, setIsSignIn] = useState(null);\n  useEffect(() => {\n    const signInCheck = async () => {\n      try {\n        const res = await fetch(`http://localhost:8080/api/user/signin/success`, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (res.ok) {\n          setIsSignIn(true);\n        } else {\n          setIsSignIn(false);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    signInCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SignInContext.Provider, {\n    value: {\n      isSignIn,\n      setIsSignIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(SignInProvider, \"k1n3IgqjOSoDzBez/0eJ10L8FH0=\");\n_c = SignInProvider;\nexport default SignInProvider;\nvar _c;\n$RefreshReg$(_c, \"SignInProvider\");","map":{"version":3,"names":["React","useState","useEffect","SignInContext","SignInProvider","children","isSignIn","setIsSignIn","signInCheck","res","fetch","headers","credentials","ok","error","console","log"],"sources":["/Users/imchaemin/Desktop/react-project/project1/client/src/contexts/SignInCheckContext/SignInCheckProvider.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SignInContext from './SignInCheckContext'\n\nfunction SignInProvider({ children }) {\n\n    const [isSignIn, setIsSignIn] = useState(null);\n\n    useEffect(() => {\n        const signInCheck = async () => {\n            try {\n                const res = await fetch(`http://localhost:8080/api/user/signin/success`, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    credentials: 'include'\n                })\n                if (res.ok) {\n                    setIsSignIn(true)\n                } else {\n                    setIsSignIn(false)\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        signInCheck()\n    }, []);\n\n\n\n    return (\n        <SignInContext.Provider value={{ isSignIn, setIsSignIn }}>\n            {children}\n        </SignInContext.Provider>\n    );\n}\n\n\nexport default SignInProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,sBAAsB;AAAA;AAEhD,SAASC,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAEhC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMM,WAAW,GAAG,YAAY;MAC5B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,+CAA8C,EAAE;UACrEC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,WAAW,EAAE;QACjB,CAAC,CAAC;QACF,IAAIH,GAAG,CAACI,EAAE,EAAE;UACRN,WAAW,CAAC,IAAI,CAAC;QACrB,CAAC,MAAM;UACHA,WAAW,CAAC,KAAK,CAAC;QACtB;MACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IACDN,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACI,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEF,QAAQ;MAAEC;IAAY,CAAE;IAAA,UACpDF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AAEjC;AAAC,GAhCQD,cAAc;AAAA,KAAdA,cAAc;AAmCvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}